name: Tests
on: [push, pull_request]
jobs: 
  quality:
    name: Tests
    runs-on: ubuntu-latest
    services:
      meilisearch:
        image: getmeili/meilisearch:v1.0
        ports:
          - 7700:7700
        env:
          MEILI_MASTER_KEY: '!ChangeMe!'
    env:  # DÃ©finir DATABASE_URL au niveau du job
      DATABASE_URL: "mysql://root:root@127.0.0.1:3306/neobook?serverVersion=8.0.32&charset=utf8mb4"
      MYSQL_ROOT_PASSWORD: root
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2

      - name: Setup Cache
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Caching deps
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php8.3-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php8.3-composer-latest-

      - name: Update composer
        run: composer self-update

      - name: Install MySQL
        run: sudo apt-get update && sudo apt-get install -y mysql-server

      - name: Start MySQL
        run: sudo service mysql start

      - name: Configure MySQL
        run: |
          mysql -uroot -proot -e "CREATE DATABASE neobook;"
          mysql -uroot -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost';"
          mysql -uroot -proot -e "FLUSH PRIVILEGES;"

      - name: install deps
        run: composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --user=root --password=root --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Give execution rights to bin/console
        run: chmod +x bin/console

      - name: Install Symfony CLI
        run: |
          curl -sS https://get.symfony.com/cli/installer | bash
          mv ~/.symfony*/bin/symfony /usr/local/bin/symfony

      - name: Start Symfony server (CLI)
        run: symfony server:start --no-tls --port=8000 --dir=public --env=test --daemon

      - name: Add Symfony CLI to PATH
        run: echo "$HOME/.symfony/bin" >> $GITHUB_PATH

      - name: Wait for Symfony Server
        run: |
          for i in {1..10}; do
            if curl -s http://127.0.0.1:8000 > /dev/null; then
              echo "Symfony server is up!"
              break
            fi
            echo "Waiting for Symfony server..."
            sleep 2
          done

      - name: Prepare Test DB (migrate + fixtures)
        run: |
          php bin/console doctrine:database:drop --force --if-exists --env=test
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:migrations:migrate -n --env=test
          php bin/console doctrine:fixtures:load --no-interaction --env=test

      - name: Tests
        run: composer test
        env:
          APP_ENV: TEST
          APP_DEBUG: true
          XDEBUG_MODE: coverage
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/neobook?serverVersion=8.0.32&charset=utf8mb4"
          MEILI_HTTP_ADDR: http://meilisearch:7700
          MEILI_MASTER_KEY: '!ChangeMe!'
          PANTHER_NO_HEADLESS: 0
          PANTHER_EXTERNAL_BASE_URI: http://127.0.0.1:8000

      - name: Dump screenshots
        if: failure()
        run: |
          ls -la var/
          cat var/error.png || echo "No screenshot"

  